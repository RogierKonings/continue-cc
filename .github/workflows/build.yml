name: Build

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
      fail-fast: false
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'

    - name: Cache dependencies
      uses: actions/cache@v4
      id: cache
      with:
        path: node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install dependencies
      if: steps.cache.outputs.cache-hit != 'true'
      run: npm ci

    - name: Run linter
      run: npm run lint

    - name: Run type checking
      run: npm run typecheck

    - name: Build extension
      run: npm run build

    - name: Package extension
      run: npm run package

    - name: Check bundle size
      run: npm run size-limit
      continue-on-error: true

    - name: Upload VSIX artifact
      uses: actions/upload-artifact@v4
      with:
        name: vscode-extension-${{ matrix.os }}
        path: |
          *.vsix
        retention-days: 7

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: build-artifacts-${{ matrix.os }}
        path: |
          out/
          dist/
        retention-days: 7

  verify-bundle:
    name: Verify Bundle Size
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build extension
      run: npm run build

    - name: Check bundle size with size-limit
      run: |
        npm run size-limit -- --json > size-report.json
        cat size-report.json

    - name: Comment PR with bundle size
      uses: actions/github-script@v7
      if: github.event_name == 'pull_request'
      with:
        script: |
          const fs = require('fs');
          const report = JSON.parse(fs.readFileSync('size-report.json', 'utf8'));
          
          let comment = '## üì¶ Bundle Size Report\n\n';
          comment += '| File | Size | Limit | Status |\n';
          comment += '|------|------|-------|--------|\n';
          
          for (const item of report) {
            const status = item.passed ? '‚úÖ' : '‚ùå';
            const size = (item.size / 1024).toFixed(2) + ' KB';
            const limit = item.limit ? (item.limit / 1024).toFixed(2) + ' KB' : 'N/A';
            comment += `| ${item.name} | ${size} | ${limit} | ${status} |\n`;
          }
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });

    - name: Fail if bundle size exceeds limit
      run: npm run size-limit