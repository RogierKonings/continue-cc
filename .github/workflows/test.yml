name: Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [18.x, 20.x]
      fail-fast: false
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run linter
      run: npm run lint
      if: matrix.os == 'ubuntu-latest' && matrix.node-version == '20.x'

    - name: Run type checking
      run: npm run typecheck
      if: matrix.os == 'ubuntu-latest' && matrix.node-version == '20.x'

    - name: Run unit tests with coverage
      run: npm run test:coverage
      env:
        CI: true

    - name: Run VSCode extension tests
      uses: coactions/setup-xvfb@v1
      if: matrix.os == 'ubuntu-latest'
      with:
        run: npm run test:vscode
      env:
        CI: true

    - name: Run VSCode extension tests (Windows/macOS)
      if: matrix.os != 'ubuntu-latest'
      run: npm run test:vscode
      env:
        CI: true

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      if: matrix.os == 'ubuntu-latest' && matrix.node-version == '20.x'
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.os }}-${{ matrix.node-version }}
        path: |
          coverage/
          test-results/
        retention-days: 7

  lint:
    name: Lint
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run ESLint
      run: npm run lint

    - name: Run TypeScript type checking
      run: npm run typecheck

    - name: Check code formatting
      run: npm run format:check